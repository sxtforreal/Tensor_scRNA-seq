# Packages
library(tensr)
library(dplyr)
library(lattice)
library(ggplot2)
library(Rfast)

# Data
dat = readRDS('/hpc/group/jilab/xiaotan/data/data.rds')

# Rename samples
colnames(dat[["Naive/Central Memory T cell_1:T/NK cell"]]) <- sub(".*:", "Naive/Central Memory T cell_1:T/NK cell:", colnames(dat[["Naive/Central Memory T cell_1:T/NK cell"]]))
colnames(dat[["Terminal effector CD8 T cell:T/NK cell"]]) = sub('.*:', 'Terminal effector CD8 T cell:T/NK cell:', colnames(dat[["Terminal effector CD8 T cell:T/NK cell"]]))
colnames(dat[["NK/NKT cell:T/NK cell"]]) = sub('.*:', 'NK/NKT cell:T/NK cell:', colnames(dat[["NK/NKT cell:T/NK cell"]]))
colnames(dat[["CD4 T cell:T/NK cell"]]) = sub('.*:', 'CD4 T cell:T/NK cell:', colnames(dat[["CD4 T cell:T/NK cell"]]))
colnames(dat[["Cytotoxic Lymphocyte:T/NK cell"]]) = sub('.*:', 'Cytotoxic Lymphocyte:T/NK cell:', colnames(dat[["Cytotoxic Lymphocyte:T/NK cell"]]))
colnames(dat[["Resident memory-like T cell:T/NK cell"]]) = sub('.*:', 'Resident memory-like T cell:T/NK cell:', colnames(dat[["Resident memory-like T cell:T/NK cell"]]))
colnames(dat[["Effector Memory T cell_1:T/NK cell"]]) = sub('.*:', 'Effector Memory T cell_1:T/NK cell:', colnames(dat[["Effector Memory T cell_1:T/NK cell"]]))
colnames(dat[["Proliferating Lymphocyte:T/NK cell"]]) = sub('.*:', 'Proliferating Lymphocyte:T/NK cell:', colnames(dat[["Proliferating Lymphocyte:T/NK cell"]]))
colnames(dat[["CD68int classical Monocyte_1:Monocyte"]]) = sub('.*:', 'CD68int classical Monocyte_1:Monocyte:', colnames(dat[["CD68int classical Monocyte_1:Monocyte"]]))
colnames(dat[["CD68hi classical Monocyte:Monocyte"]]) = sub('.*:', 'CD68hi classical Monocyte:Monocyte:', colnames(dat[["CD68hi classical Monocyte:Monocyte"]]))
colnames(dat[["Non-classical Monocyte:Monocyte"]]) = sub('.*:', 'Non-classical Monocyte:Monocyte:', colnames(dat[["Non-classical Monocyte:Monocyte"]]))
colnames(dat[["CD1c+ mDC:Monocyte"]]) = sub('.*:', 'CD1c+ mDC:Monocyte:', colnames(dat[["CD1c+ mDC:Monocyte"]]))
colnames(dat[["Memory B cell:B cell"]]) = sub('.*:', 'Memory B cell:B cell:', colnames(dat[["Memory B cell:B cell"]]))
colnames(dat[["Plasma B cell:B cell"]]) = sub('.*:', 'Plasma B cell:B cell:', colnames(dat[["Plasma B cell:B cell"]]))
colnames(dat[["Neutrophil_1:Neutrophil"]]) = sub('.*:', 'Neutrophil_1:Neutrophil:', colnames(dat[["Neutrophil_1:Neutrophil"]]))

# Combined matrix
combmat = do.call(cbind,dat)

# Retain genes that are expressed in at least 1% of cells:subjects
nonzero = rowSums(combmat != 0)
combmat = cbind(combmat, nonzero)
combmat = combmat[combmat[,ncol(combmat)] > 31,]
combmat = combmat[,-ncol(combmat)]

# Retain half of the genes with highest coefficient of variance (CV)
cv = rowcvs(combmat)
summary(cv)
combmat = cbind(combmat, cv)
combmat = combmat[combmat[,ncol(combmat)] > median(cv),]
combmat = combmat[,-ncol(combmat)]

# Standardization (gene-wise)
# Make sure genes are comparable --> control the effect from gene variation so we can isolate the effect from the sample variable.
combmat = t(combmat)
combmat = scale(combmat)
combmat = t(combmat)

# Transform list into array
ary <- array(unlist(combmat), dim = c(7128, 209, 15))
saveRDS(ary, file = "/hpc/group/jilab/xiaotan/data/scaled_ary1.RData")
#saveRDS(ary, file = "/Users/sunxiaotan/Desktop/scaled_ary1.RData")

# HOOI
hooi1 = hooi(ary, r = c(712, 20, 5), itermax = 5)
saveRDS(hooi1, file = "/hpc/group/jilab/xiaotan/data/hooi1.RData")
hooi2 = hooi(ary, r = c(1068, 20, 5), itermax = 5)
saveRDS(hooi2, file = "/hpc/group/jilab/xiaotan/data/hooi2.RData")
hooi3 = hooi(ary, r = c(1424, 20, 5), itermax = 5)
saveRDS(hooi3, file = "/hpc/group/jilab/xiaotan/data/hooi3.RData")
hooi4 = hooi(ary, r = c(712, 30, 5), itermax = 5)
saveRDS(hooi4, file = "/hpc/group/jilab/xiaotan/data/hooi4.RData")
hooi5 = hooi(ary, r = c(712, 40, 5), itermax = 5)
saveRDS(hooi5, file = "/hpc/group/jilab/xiaotan/data/hooi5.RData")
